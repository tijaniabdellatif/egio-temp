const status_obj = {
    10: "Publiée",
    20: "Brouillons",
    30: "En revue",
    40: "En attente de paiment",
    50: "Rejetée",
    60: "Expirée",
    70: "Supprimée",
};

const status_arr = [
    { val: "10", desc: "Publiée" },
    { val: "20", desc: "Brouillon" },
    { val: "30", desc: "En revue" },
  //  { val: "40", desc:"en attente de payement"},
    { val: "50", desc: "Rejetée" },
    { val: "60", desc: "Expirée" },
    { val: "70", desc: "Supprimée" },
];

const usertype_arr = [
    { val: "3", desc: "Promoteur" },
    { val: "4", desc: "Agence" },
    { val: "5", desc: "Particulier" },
];

const status_arr2 = [
    { val: "10", desc: "Actif" },
    { val: "60", desc: "Expiré" },
    { val: "70", desc: "Inactif" },
];

const usertypes = [
    { val: "1", desc: "admin" },
    { val: "2", desc: "moderator manager" },
    { val: "3", desc: "promoter" },
    { val: "4", desc: "agency" },
    { val: "5", desc: "particular" },
    { val: "6", desc: "moderator" },
    { val: "7", desc: "comercial" },
    { val: "8", desc: "ced manager" },
    { val: "9", desc: "ced" },
];

const univers_arr = [
    { val: "1", desc: "Homelist" },
    { val: "2", desc: "Officelist" },
    { val: "3", desc: "Primelist" },
    { val: "4", desc: "Landlist" },
    { val: "5", desc: "Booklist" },
];

const subject_arr = [
    {  val: "updateStatus", desc: "updateStatus" },
    {  val: "updateUser", desc: "updateUser" },
    {  val: "createNewTransaction", desc: "createNewTransaction" },
    {  val: "changePassword", desc: "changePassword" },
    {  val: "addAd", desc: "addAd" },
    {  val: "updateOptions", desc: "updateOptions" },
    {  val: "createUser", desc: "createUser" },
];

const cat_types = ["vente", "location", "vacance"];

const onlyAlphabets = /^[a-zA-Z\s]*$/;

//const mapStyle = "/assets/map/multilist-map-style.json";
//const mapStyle = "https://www.mapmepro.com/Assets/json/mlist-demo.json";
const mapStyle = "/assets/map/osm_liberty.json?key=8auUt2Sy9aPMlspjUmHG";
//const mapStyle = 'https://api.maptiler.com/maps/streets/style.json?key=get_your_own_OpIi9ZULNHzrESv6T2vL';

$(".modal-close")
    .click(function () {
        hideModal($(this).attr("data-id"));
    })
    .children()
    .click(function () {
        return false;
    });

$(".alert-close")
    .click(function () {
        hideAlert();
    })
    .children()
    .click(function () {
        return false;
    });

function showModal(id) {
    $("#" + id).addClass("show");
}

function hideModal(id) {
    $("#" + id).removeClass("show");
}

/*function objToUrlParams(obj) {
    var str = "";
    for (var key in obj) {
        if (obj[key]) {
            if (str != "") {
                str += "&";
            }
            str += key + "=" + encodeURIComponent(obj[key]);
        }
    }
}*/

function showAlert(type, title, message) {
    let bgcolor = "unset";
    let color = "unset";
    let icon = "";
    if (type == "success") {
        bgcolor = "#d1e7dd";
        color = "#0f5132";
        icon = '<i class="bi bi-check-circle me-1"></i>';
    }
    if (type == "info") {
        bgcolor = "#cff4fc";
        color = "#055160";
        icon = '<i class="bi bi-info-circle me-1"></i>';
    }
    if (type == "alert") {
        bgcolor = "#fff3cd";
        color = "#664d03";
        icon = '<i class="bi bi-exclamation-triangle me-1"></i>';
    }
    if (type == "danger") {
        bgcolor = "#f8d7da";
        color = "#842029";
        icon = '<i class="bi bi-exclamation-octagon me-1"></i>';
    }
    $("#modal-alert .modal-header").css("background-color", bgcolor);
    $("#modal-alert .modal-header").css("color", color);
    $("#alert-title").html(icon + title);
    $("#alert-message").html(message);
    $("#modal-alert").addClass("show");
}

function hideAlert() {
    $("#modal-alert .modal-header").css("background-color", "unset");
    $("#modal-alert .modal-header").css("color", "unset");
    $("#alert-title").html("");
    $("#alert-message").html("");
    $("#modal-alert").removeClass("show");
}

function findObjInArrById(arr, id) {
    var obj = false;
    for (const ar of arr) {
        if (ar.id == id) {
            obj = ar;
            break;
        }
    }
    return obj;
}

// email status
const email_status_obj = {
    0: "en attente",
    1: "confirmé",
    2: "annulé",
    3: "échoué",
};

const emails_arr = [
    {desc: "en attente",val:0},
    {desc: "confirmé",val:1},
    {desc: "annulé",val:2},
    {desc: "échoué",val:3}
];

var toastTimeOut;
function displayToast(text, color, icon = null) {
    $("#error-toast .toast-body").html(
        (icon ? '<i class="' + icon + '"></i>' : "") + text
    );
    $("#error-toast").attr("style", function (i, s) {
        return (s || "") + "background-color: " + color + " !important;";
    });
    $("#error-toast").addClass("show");
    if (toastTimeOut) clearTimeout(toastTimeOut);
    toastTimeOut = setTimeout(function () {
        $("#error-toast").removeClass("show");
    }, 5000);
}

function inside(point, vs) {
    // ray-casting algorithm based on
    // https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html/pnpoly.html

    var x = point[0],
        y = point[1];

    var inside = false;
    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {
        var xi = vs[i][0],
            yi = vs[i][1];
        var xj = vs[j][0],
            yj = vs[j][1];

        var intersect =
            yi > y != yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;
        if (intersect) inside = !inside;
    }

    return inside;
}

function area(poly) {
    var s = 0.0;
    var ring = poly[0][0];
    for (i = 0; i < ring.length - 1; i++) {
        s += ring[i][0] * ring[i + 1][1] - ring[i + 1][0] * ring[i][1];
    }
    return 0.5 * s;
}

function centroid(poly) {
    var c = [0, 0];
    var ring = poly[0][0];
    for (i = 0; i < ring.length - 1; i++) {
        c[0] +=
            (ring[i][0] + ring[i + 1][0]) *
            (ring[i][0] * ring[i + 1][1] - ring[i + 1][0] * ring[i][1]);
        c[1] +=
            (ring[i][1] + ring[i + 1][1]) *
            (ring[i][0] * ring[i + 1][1] - ring[i + 1][0] * ring[i][1]);
    }
    var a = area(poly);
    c[0] /= a * 6;
    c[1] /= a * 6;
    return c;
}

const multipolygoneTest = {
    type: "Feature",
    geometry: {
        type: "MultiPolygon",
        coordinates: [
            [
                [
                    [-7.746445, 33.5557435],
                    [-7.7456778, 33.5561975],
                    [-7.7442241, 33.5571586],
                    [-7.7427381, 33.558227],
                    [-7.7419335, 33.559349],
                    [-7.7414185, 33.5599212],
                    [-7.7400988, 33.560556],
                    [-7.7388543, 33.561079],
                    [-7.7378082, 33.5614858],
                    [-7.7366012, 33.5621965],
                    [-7.7363464, 33.5624156],
                    [-7.7358878, 33.5626122],
                    [-7.7352923, 33.5627955],
                    [-7.7342355, 33.5629654],
                    [-7.732299, 33.5635197],
                    [-7.730695, 33.563837],
                    [-7.7276802, 33.5650797],
                    [-7.7247834, 33.5663894],
                    [-7.7207226, 33.5686198],
                    [-7.7194995, 33.5693886],
                    [-7.7180779, 33.5702513],
                    [-7.7176166, 33.5705999],
                    [-7.7167583, 33.5711094],
                    [-7.7159482, 33.5713642],
                    [-7.7153474, 33.5716056],
                    [-7.7108038, 33.5748281],
                    [-7.7097542, 33.575347],
                    [-7.7086687, 33.5765578],
                    [-7.7078588, 33.57836],
                    [-7.7075207, 33.5785868],
                    [-7.70653, 33.5789289],
                    [-7.7059405, 33.5796646],
                    [-7.7053209, 33.5805356],
                    [-7.7050167, 33.5818079],
                    [-7.7046722, 33.5827051],
                    [-7.7044871, 33.582933],
                    [-7.7042977, 33.5830497],
                    [-7.704117, 33.5829867],
                    [-7.7039212, 33.5827722],
                    [-7.7034964, 33.5823883],
                    [-7.7027584, 33.5818438],
                    [-7.702303, 33.5818668],
                    [-7.7016113, 33.5823481],
                    [-7.7011806, 33.582805],
                    [-7.6998684, 33.5836198],
                    [-7.6990795, 33.5838384],
                    [-7.697869, 33.5839679],
                    [-7.6965934, 33.5842134],
                    [-7.6952979, 33.5846737],
                    [-7.694685, 33.5847061],
                    [-7.6943336, 33.5847888],
                    [-7.6912679, 33.586135],
                    [-7.688874, 33.5875651],
                    [-7.685295, 33.5893705],
                    [-7.6833111, 33.5907021],
                    [-7.6809642, 33.592036],
                    [-7.6800696, 33.5924191],
                    [-7.6800603, 33.592466],
                    [-7.680086, 33.5925273],
                    [-7.680197, 33.5927397],
                    [-7.680227, 33.5928669],
                    [-7.6800507, 33.5941357],
                    [-7.6798926, 33.5944143],
                    [-7.6797208, 33.594583],
                    [-7.6795145, 33.5967512],
                    [-7.6794166, 33.5972204],
                    [-7.6792556, 33.5980996],
                    [-7.6791349, 33.5988435],
                    [-7.6790491, 33.5988759],
                    [-7.6789753, 33.5988692],
                    [-7.6789257, 33.5988],
                    [-7.6789834, 33.5982929],
                    [-7.6787956, 33.5981403],
                    [-7.6782952, 33.5978094],
                    [-7.677808, 33.5974098],
                    [-7.6775511, 33.5972785],
                    [-7.6765063, 33.5971434],
                    [-7.6762891, 33.5971009],
                    [-7.6755488, 33.5970719],
                    [-7.6743069, 33.5972729],
                    [-7.6733011, 33.5974293],
                    [-7.6725286, 33.5976505],
                    [-7.6716355, 33.5978963],
                    [-7.6701415, 33.5988726],
                    [-7.6692188, 33.5995026],
                    [-7.667765, 33.6003471],
                    [-7.6664051, 33.6009614],
                    [-7.6648897, 33.6017523],
                    [-7.6633152, 33.602628],
                    [-7.6617917, 33.6033451],
                    [-7.6609844, 33.6037338],
                    [-7.6606384, 33.6041292],
                    [-7.6602119, 33.6051904],
                    [-7.6596245, 33.6058092],
                    [-7.6587126, 33.6064525],
                    [-7.6582673, 33.6072344],
                    [-7.6575002, 33.6078018],
                    [-7.6570335, 33.6081078],
                    [-7.656717, 33.608358],
                    [-7.6565641, 33.6084608],
                    [-7.6562262, 33.6086708],
                    [-7.6560652, 33.6089902],
                    [-7.6562959, 33.6096067],
                    [-7.6562959, 33.6096983],
                    [-7.6562369, 33.6099061],
                    [-7.6559955, 33.6101116],
                    [-7.6556629, 33.6107147],
                    [-7.6554322, 33.6109828],
                    [-7.655215, 33.6112553],
                    [-7.6550406, 33.6114831],
                    [-7.6548877, 33.6115837],
                    [-7.654582, 33.611711],
                    [-7.6542655, 33.6118227],
                    [-7.6539972, 33.6119053],
                    [-7.6537746, 33.6118897],
                    [-7.6535949, 33.6118629],
                    [-7.6534769, 33.6119053],
                    [-7.6534688, 33.6120371],
                    [-7.653644, 33.6123257],
                    [-7.6537478, 33.6125754],
                    [-7.6537156, 33.6127586],
                    [-7.6533374, 33.6133237],
                    [-7.6529565, 33.6139537],
                    [-7.6528063, 33.6143401],
                    [-7.6524845, 33.615104],
                    [-7.6522001, 33.6158255],
                    [-7.6521117, 33.6159081],
                    [-7.6519721, 33.6159371],
                    [-7.651476, 33.6157495],
                    [-7.6509368, 33.6152604],
                    [-7.6505399, 33.6146729],
                    [-7.6501697, 33.614043],
                    [-7.6500732, 33.6135136],
                    [-7.6498801, 33.6127273],
                    [-7.6498908, 33.6119344],
                    [-7.6497781, 33.6111905],
                    [-7.649813, 33.6101094],
                    [-7.6498076, 33.6095308],
                    [-7.6497567, 33.6090215],
                    [-7.6496655, 33.6087691],
                    [-7.6494268, 33.6082419],
                    [-7.6488045, 33.6075583],
                    [-7.648319, 33.6071763],
                    [-7.6469243, 33.6062783],
                    [-7.6456583, 33.6056059],
                    [-7.6451647, 33.6054495],
                    [-7.6448697, 33.6053892],
                    [-7.6444057, 33.6053065],
                    [-7.6431853, 33.6048084],
                    [-7.6424155, 33.6047123],
                    [-7.6418341, 33.604709],
                    [-7.641647, 33.6047151],
                    [-7.6415679, 33.6047179],
                    [-7.6414747, 33.6047212],
                    [-7.6414308, 33.6047229],
                    [-7.6413828, 33.6047249],
                    [-7.6413064, 33.6047224],
                    [-7.6412507, 33.6047257],
                    [-7.6399104, 33.604797],
                    [-7.6397752, 33.604274],
                    [-7.6397147, 33.6040398],
                    [-7.6395213, 33.602965],
                    [-7.6389634, 33.6000385],
                    [-7.6383947, 33.5970671],
                    [-7.637869, 33.5942207],
                    [-7.6373272, 33.5930589],
                    [-7.6365977, 33.5918658],
                    [-7.6359593, 33.5910883],
                    [-7.6369893, 33.5906504],
                    [-7.6406961, 33.5891981],
                    [-7.6440918, 33.5880005],
                    [-7.6442574, 33.587981],
                    [-7.6444192, 33.5879581],
                    [-7.6466345, 33.5875178],
                    [-7.6486461, 33.5870888],
                    [-7.6503896, 33.5866509],
                    [-7.6526534, 33.585985],
                    [-7.6539086, 33.5854219],
                    [-7.6569985, 33.583898],
                    [-7.6588922, 33.5832322],
                    [-7.660995, 33.5824903],
                    [-7.6612534, 33.5823777],
                    [-7.6622557, 33.5819406],
                    [-7.6646697, 33.5809172],
                    [-7.6669442, 33.5800993],
                    [-7.6715898, 33.5780077],
                    [-7.6733045, 33.5772641],
                    [-7.6747226, 33.5766491],
                    [-7.6749801, 33.5765597],
                    [-7.6760154, 33.5761753],
                    [-7.6769005, 33.5759652],
                    [-7.6797544, 33.5753082],
                    [-7.6807468, 33.5750088],
                    [-7.6819109, 33.5745708],
                    [-7.6836436, 33.5738959],
                    [-7.684577, 33.5734311],
                    [-7.6858967, 33.5727472],
                    [-7.6868354, 33.5722332],
                    [-7.6874094, 33.5720544],
                    [-7.6882946, 33.5718623],
                    [-7.6891421, 33.5716388],
                    [-7.690156, 33.5713795],
                    [-7.691422, 33.571165],
                    [-7.6924466, 33.5711426],
                    [-7.6935946, 33.5710756],
                    [-7.694292, 33.5709192],
                    [-7.6955902, 33.5705214],
                    [-7.6967435, 33.5702532],
                    [-7.6973872, 33.5702666],
                    [-7.6981546, 33.5704078],
                    [-7.6997264, 33.5707431],
                    [-7.7001606, 33.5707828],
                    [-7.7011156, 33.5707115],
                    [-7.7026696, 33.5705408],
                    [-7.7036637, 33.570345],
                    [-7.7046936, 33.5699517],
                    [-7.7064998, 33.5690166],
                    [-7.7077497, 33.5682523],
                    [-7.7085667, 33.5676766],
                    [-7.7100618, 33.5669247],
                    [-7.7115279, 33.5661926],
                    [-7.7141887, 33.564892],
                    [-7.7162953, 33.5637734],
                    [-7.7176793, 33.5630091],
                    [-7.7202435, 33.5614937],
                    [-7.721767, 33.5605237],
                    [-7.7232154, 33.5595358],
                    [-7.7252538, 33.5582528],
                    [-7.7277161, 33.5567508],
                    [-7.7291967, 33.5557896],
                    [-7.7301853, 33.5550263],
                    [-7.7314873, 33.5540252],
                    [-7.7315999, 33.5539496],
                    [-7.7330698, 33.5531252],
                    [-7.7341427, 33.5525087],
                    [-7.7350332, 33.5519476],
                    [-7.7380802, 33.5503167],
                    [-7.7399255, 33.5497034],
                    [-7.7422859, 33.5522534],
                    [-7.7439875, 33.5537716],
                    [-7.746445, 33.5557435],
                ],
            ],
        ],
    },
};

